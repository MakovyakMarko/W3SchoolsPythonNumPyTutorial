# -*- coding: utf-8 -*-
"""
Created on Fri Apr 28 18:19:37 2023

@author: Marko
"""

import numpy as np
arr = np.array([1,2,3,4,5])
print(arr)
print(type(arr))
a = arr

# розмір у масивах = це один рівень глибини
# масиву (вкладені масиви). Вкладений масив:
# це масиви, елементи яких містять масиви

# 0-D (dimension) масиви, або скаляри, це елементи в масиві.
# Кожне значення в масиві є масивом 0-D.
arr = np.array(42)
print(arr)
b = arr

# 1-D масиви. Масив, елементами якого є 0-D масиви,
# називається 1-D масивом. Це найпоширеніші і основні масиви
arr = np.array([1,2,3,4,5])
print(arr)
c = arr

# 2-D масив, елементами якого є 1-D масиви, називається 
# 2-D масивом. Вони часто використовуються для представлення 
# матриці або тензорів 2-го порядку.
# NumPy має цілий підмодуль, присвячений матричним операціям
# numpy.mat
arr = np.array([[1,2,3],[4,5,6]])
print(arr)
d = arr
# 3-D масиви. Масив, елементами якого є 2-D масиви (матриці),
# називається 3-D масивом. Вони часто використовуються для 
# представлення тензора 3-го порядку
arr = np.array([[[1,2,3],[4,5,6]],[[1,2,3],[4,5,6]]])
print(arr)
e = arr
# ndim надається NumPy для перевірки кількості вимірів
print(a.ndim)
print(b.ndim)
print(c.ndim)
print(d.ndim)
print(e.ndim)
# високовимірні масиви
# масив може мати будь-яку кількість розмірів
# коли масив створено, ви можете визначити кількість
# вимірів за допомогою аргументу ndmin
arr = np.array([1,2,3,4], ndmin=5)
print(arr)
print("number of dimensions :", arr.ndim)
# у цьому масиві внутрішній розмір (5-dim) має 4 елементи,
# 4-dim має 1 елемент, який є векторов
# 3-dim має 1 елемент, який є матрицею з вектором
# 2-dim має 1 елемент, який є 3D-масивом
# 1-dim має 1 елемент, який є 4D-масивом 